services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/uploads:/usr/share/nginx/html/uploads
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile # Użyj tego Dockerfile dla dev
    ports:
      - "3000:5173" # Mapuj port hosta 3000 na port kontenera 5173 (Vite)
    volumes:
      - ./frontend:/app # Zamontuj cały folder frontend
      - /app/node_modules # Wyklucz wolumen dla node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true" # Czasami potrzebne w Dockerze do śledzenia zmian
    networks:
      - app-network

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    ports:
      - "5000:5000"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      DB_HOST: mysql
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: dreamfoodx_db
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql/mysql-server:8.0.23
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: dreamfoodx_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 10

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
